name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    services:
      ollama:
        image: ollama/ollama:latest
        ports:
          - 11434:11434
        options: >-
          --health-cmd "curl -f http://localhost:11434/api/tags"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
    - uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.21'

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'

    - name: Install Go dependencies
      run: |
        cd backend
        go mod download
        go mod verify

    - name: Install Python dependencies
      run: |
        cd ml_service
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Install Node.js dependencies
      run: |
        cd frontend
        npm ci

    - name: Run Go tests
      run: |
        cd backend
        go test -v ./...

    - name: Run Python tests
      run: |
        cd ml_service
        python -m pytest tests/ -v

    - name: Run frontend tests
      run: |
        cd frontend
        npm run test --if-present

    - name: Build frontend
      run: |
        cd frontend
        npm run build

    - name: Build Docker images
      run: |
        docker build -t resume-match-backend ./backend
        docker build -t resume-match-ml ./ml_service
        docker build -t resume-match-frontend ./frontend

  security:
    runs-on: ubuntu-latest
    needs: test
    
    steps:
    - uses: actions/checkout@v4

    - name: Run Trivy vulnerability scanner
      uses: aquasecurity/trivy-action@master
      with:
        scan-type: 'fs'
        scan-ref: '.'
        format: 'sarif'
        output: 'trivy-results.sarif'

    - name: Upload Trivy scan results to GitHub Security tab
      uses: github/codeql-action/upload-sarif@v2
      if: always()
      with:
        sarif_file: 'trivy-results.sarif'

  deploy:
    runs-on: ubuntu-latest
    needs: [test, security]
    if: github.ref == 'refs/heads/main'
    
    steps:
    - uses: actions/checkout@v4

    - name: Build and push Docker images
      run: |
        echo "Deploying to production..."
        # Add your deployment logic here
        # Example: Push to Docker Hub, deploy to cloud, etc.
